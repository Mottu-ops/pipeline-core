name: Container on Kubernetes

on:
  workflow_call:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}        

      - name: Auth Google Clould Plataform
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Setup docker
        run: gcloud auth configure-docker -q

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run build

      - run: |
          REPOSITORY_NAME=$(basename ${{ github.repository }})
          COMMIT_SHA=${{ github.sha }}
          docker build -t gcr.io/mottu-321312/mottu/images/$REPOSITORY_NAME:$COMMIT_SHA
        name: 'build images'


  test:
    name: test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo "build" 
      
  deployHomologation:
    name: deploy homologation
    environment: homologation
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: 
      - build
      - test
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploy homologation" 
      
  deployProduction:
    name: deploy production
    environment: production
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name != 'pull_request'
    needs: 
      - build
      - test
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploy homologation"       
      